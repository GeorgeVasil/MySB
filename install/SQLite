#!/bin/bash 
# ----------------------------------
source /etc/MySB/inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___        
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_       
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_      
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__     
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_    
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_   
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_  
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__ 
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### Create DB
if [ ! -f $SQLiteDB ]; then
	sqlite3 -echo $SQLiteDB < /etc/MySB/templates/MySB_2014-11-02.dump.sql;
fi

#### Import users files to database
UsersList="`ls /etc/MySB/users/ | grep '.info' | sed 's/.\{5\}$//'`"
cd /etc/MySB/users/
for SeedboxUser in $UsersList; do
	UserName="$(cat $SeedboxUser.info | grep 'Username=' | awk '{ print $2 }')"
	UserEmail="$(cat $SeedboxUser.info | grep 'E-mail=' | awk '{ print $2 }')"
	UserPassword="$(cat $SeedboxUser.info | grep 'Password=' | awk '{ print $2 }')"
	UserRPC="$(cat $SeedboxUser.info | grep 'RPC=' | awk '{ print $2 }')"
	UserSSH="$(cat $SeedboxUser.info | grep 'SSH=' | awk '{ print $2 }' | sed 's/YES/1/g;' | sed 's/NO/0/g;')"
	UserSudo="$(cat $SeedboxUser.info | grep 'Sudo powers=' | awk '{ print $3 }' | sed 's/YES/1/g;' | sed 's/NO/0/g;')"
	UserIP="$(cat $SeedboxUser.info | grep 'IP Address=' | awk '{ print $3 }')"
	UserScgiPort="$(cat $SeedboxUser.info | grep 'SCGI port=' | awk '{ print $3 }')"
	UserRtorrentPort="$(cat $SeedboxUser.info | grep 'rTorrent port=' | awk '{ print $3 }')"
	UserHomeDir="$(cat $SeedboxUser.info | grep 'Home=' | awk '{ print $2 }')"
	
	sqlite3 -echo $SQLiteDB \
		"INSERT into users (users_ident,users_email,users_passwd,rpc,sftp,sudo,fixed_ip,scgi_port,rtorrent_port,home_dir) \
		VALUES (\"$UserName\",\"$UserEmail\",\"$UserPassword\",\"$UserRPC\",\"$UserSSH\",\"$UserSudo\",\"$UserIP\",\"$UserScgiPort\",\"$UserRtorrentPort\",\"$UserHomeDir\");"
done

# ----- Main user info
if [ -f /etc/MySB/infos/email.info ] && [ -f /etc/MySB/infos/mainuser.info ]; then
	sqlite3 -echo $SQLiteDB "UPDATE users SET admin = '1' WHERE users_email = '$(cat /etc/MySB/infos/email.info)' and users_ident = '$(cat /etc/MySB/infos/mainuser.info)';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/email.info
		rm /etc/MySB/infos/mainuser.info
	fi	
fi

# ----- Main user info

#### Import files infos to database
# ----- System info
if [ -f /etc/MySB/infos/version.info ]; then
	MySB_CurrentVersion=`cat /etc/MySB/infos/version.info`
	sqlite3 -echo $SQLiteDB "INSERT into system (version) VALUES (\"$MySB_CurrentVersion\");"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/version.info
	fi
fi
if [ -f /etc/MySB/infos/hostfqdn.info ]; then
	sqlite3 -echo $SQLiteDB "UPDATE system SET hostname = '$(cat /etc/MySB/infos/hostfqdn.info)' WHERE version = '$MySB_CurrentVersion';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/hostfqdn.info
	fi
fi
if [ -f /etc/MySB/infos/ipaddress.info ]; then
	sqlite3 -echo $SQLiteDB "UPDATE system SET ipv4 = '$(cat /etc/MySB/infos/ipaddress.info)' WHERE version = '$MySB_CurrentVersion';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/ipaddress.info
	fi
fi
if [ -f /etc/MySB/infos/primaryinet.info ]; then
	sqlite3 -echo $SQLiteDB "UPDATE system SET primary_inet = '$(cat /etc/MySB/infos/primaryinet.info)' WHERE version = '$MySB_CurrentVersion';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/primaryinet.info
	fi
fi
if [ -f /etc/MySB/infos/timezone.info ]; then
	sqlite3 -echo $SQLiteDB "UPDATE system SET timezone = '$(cat /etc/MySB/infos/timezone.info)' WHERE version = '$MySB_CurrentVersion';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/timezone.info
	fi
fi
if [ -f /etc/MySB/infos/MySB_password.info ]; then
	sqlite3 -echo $SQLiteDB "UPDATE system SET mysb_user = '$(cat /etc/MySB/infos/MySB_password.info | grep user | awk '{ print $2 }')' WHERE version = '$MySB_CurrentVersion';"
	sqlite3 -echo $SQLiteDB "UPDATE system SET mysb_password = '$(cat /etc/MySB/infos/MySB_password.info | grep pass | awk '{ print $2 }')' WHERE version = '$MySB_CurrentVersion';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/MySB_password.info
	fi
fi
if [ -f /etc/MySB/infos/certpass.info ]; then
	sqlite3 -echo $SQLiteDB "UPDATE system SET cert_password = '$(cat /etc/MySB/infos/certpass.info)' WHERE version = '$MySB_CurrentVersion';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/certpass.info
	fi
fi
if [ -f /etc/MySB/infos/port_ftp.info ]; then
	sqlite3 -echo $SQLiteDB "UPDATE system SET port_ftp = '$(cat /etc/MySB/infos/port_ftp.info)' WHERE version = '$MySB_CurrentVersion';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/port_ftp.info
	fi
fi
if [ -f /etc/MySB/infos/port_ftpdata.info ]; then
	sqlite3 -echo $SQLiteDB "UPDATE system SET port_ftp_data = '$(cat /etc/MySB/infos/port_ftpdata.info)', port_ftp_passive = '65000:65535' WHERE version = '$MySB_CurrentVersion';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/port_ftpdata.info
	fi
fi
if [ -f /etc/MySB/infos/port_ssh.info ]; then
	sqlite3 -echo $SQLiteDB "UPDATE system SET port_ssh = '$(cat /etc/MySB/infos/port_ssh.info)' WHERE version = '$MySB_CurrentVersion';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/port_ssh.info
	fi
fi
if [ -f /etc/MySB/infos/port_https.info ]; then
	sqlite3 -echo $SQLiteDB "UPDATE system SET port_https = '$(cat /etc/MySB/infos/port_https.info)' WHERE version = '$MySB_CurrentVersion';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/port_https.info
	fi
fi
if [ -f /etc/MySB/infos/port_http.info ]; then
	sqlite3 -echo $SQLiteDB "UPDATE system SET port_http = '$(cat /etc/MySB/infos/port_http.info)' WHERE version = '$MySB_CurrentVersion';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/port_http.info
	fi
fi
# ----- System info

# ----- Services info
if [ -f /etc/MySB/infos/install_cakebox.info ] && [ -f /etc/MySB/infos/port_cakebox.info ]; then
	sqlite3 -echo $SQLiteDB "UPDATE services SET ports_tcp = '$(cat /etc/MySB/infos/port_cakebox.info)', is_installed = '$(cat /etc/MySB/infos/install_cakebox.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'CakeBox-Light';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/install_cakebox.info
		rm /etc/MySB/infos/port_cakebox.info
	fi
fi
if [ -f /etc/MySB/infos/install_webmin.info ] && [ -f /etc/MySB/infos/port_webmin.info ]; then
	sqlite3 -echo $SQLiteDB "UPDATE services SET ports_tcp = '$(cat /etc/MySB/infos/port_webmin.info)', is_installed = '$(cat /etc/MySB/infos/install_webmin.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'Webmin';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/install_webmin.info
		rm /etc/MySB/infos/port_webmin.info
	fi
fi
if [ -f /etc/MySB/infos/install_openvpn.info ] && [ -f /etc/MySB/infos/port_openvpn.info ] && [ -f /etc/MySB/infos/proto_openvpn.info ]; then
	Port_OpenVPN_WithGW="$(cat /etc/MySB/infos/port_openvpn.info)"
	Port_OpenVPN_WithoutGW="${Port_OpenVPN_WithGW}"
	(( Port_OpenVPN_WithoutGW++ ))
	
	case "$(cat /etc/MySB/infos/proto_openvpn.info)" in
		"tcp")
			sqlite3 -echo $SQLiteDB "UPDATE services SET ports_tcp = '${Port_OpenVPN_WithGW} ${Port_OpenVPN_WithoutGW}', is_installed = '$(cat /etc/MySB/infos/install_openvpn.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'OpenVPN';"
		;;
		"udp")
			sqlite3 -echo $SQLiteDB "UPDATE services SET ports_udp = '${Port_OpenVPN_WithGW} ${Port_OpenVPN_WithoutGW}', is_installed = '$(cat /etc/MySB/infos/install_openvpn.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'OpenVPN';"
		;;
	esac
	
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/install_openvpn.info
		rm /etc/MySB/infos/port_openvpn.info
		rm /etc/MySB/infos/proto_openvpn.info
	fi	
fi
if [ -f /etc/MySB/infos/install_dnscrypt.info ] ; then
	sqlite3 -echo $SQLiteDB "UPDATE services SET is_installed = '$(cat /etc/MySB/infos/install_dnscrypt.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'DNScrypt-proxy';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/install_dnscrypt.info
	fi
fi
if [ -f /etc/MySB/infos/install_fail2ban.info ] ; then
	sqlite3 -echo $SQLiteDB "UPDATE services SET is_installed = '$(cat /etc/MySB/infos/install_fail2ban.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'Fail2Ban';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/install_fail2ban.info
	fi
fi
if [ -f /etc/MySB/infos/install_manager.info ] ; then
	sqlite3 -echo $SQLiteDB "UPDATE services SET is_installed = '$(cat /etc/MySB/infos/install_manager.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'Seedbox-Manager';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/install_manager.info
	fi
fi
if [ -f /etc/MySB/infos/install_plexmedia.info ] ; then
	sqlite3 -echo $SQLiteDB "UPDATE services SET is_installed = '$(cat /etc/MySB/infos/install_plexmedia.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'Plex Media Server';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/install_plexmedia.info
	fi
fi
if [ -f /etc/MySB/infos/blocklist.info ] ; then
	MySB_PeerBlock=$(cat /etc/MySB/infos/blocklist.info)
	case $MySB_PeerBlock in
		PeerGuardian)
			sqlite3 -echo $SQLiteDB "UPDATE services SET is_installed = '1' WHERE serv_name = 'PeerGuardian';"
			sqlite3 -echo $SQLiteDB "UPDATE services SET is_installed = '0' WHERE serv_name = 'rTorrent Block List';"
		;;
		rTorrent)
			sqlite3 -echo $SQLiteDB "UPDATE services SET is_installed = '1' WHERE serv_name = 'rTorrent Block List';"
			sqlite3 -echo $SQLiteDB "UPDATE services SET is_installed = '0' WHERE serv_name = 'PeerGuardian';"
		;;	
		*)
			sqlite3 -echo $SQLiteDB "UPDATE services SET is_installed = '0' WHERE serv_name = 'rTorrent Block List';"
			sqlite3 -echo $SQLiteDB "UPDATE services SET is_installed = '0' WHERE serv_name = 'PeerGuardian';"
		;;
	esac	
	
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/blocklist.info
	fi
fi
if [ -f /etc/MySB/infos/install_logwatch.info ] ; then
	sqlite3 -echo $SQLiteDB "UPDATE services SET is_installed = '$(cat /etc/MySB/infos/install_logwatch.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'DNScrypt-proxy';"
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/install_logwatch.info
	fi
else
	if [ -d /etc/logwatch/ ]; then
		sqlite3 -echo $SQLiteDB "UPDATE services SET is_installed = '1' WHERE serv_name = 'LogWatch';"
	fi
fi
# ----- Services info

# ----- SMTP info
if [ -f /etc/MySB/infos/smtp.info ] \
	&& [ -f /etc/MySB/infos/smtp_user.info ] \
	&& [ -f /etc/MySB/infos/smtp_host.info ] \
	&& [ -f /etc/MySB/infos/smtp_port.info ]; then
	
	Smtp_Provider="$(cat /etc/MySB/infos/smtp.info)"
	Smtp_Username="$(cat /etc/MySB/infos/smtp_user.info)"
	Smtp_Password="$(cat /etc/postfix/sasl/sasl_passwd | awk '{ print $2 }' | cut -d ":" -f 2)"
	Smtp_Host="$(cat /etc/MySB/infos/smtp_host.info)"
	Smtp_Port="$(cat /etc/MySB/infos/smtp_port.info)"
	
	sqlite3 -echo $SQLiteDB \
		"INSERT into smtp (smtp_provider,smtp_username,smtp_passwd,smtp_host,smtp_port) \
		VALUES (\"$Smtp_Provider\",\"$Smtp_Username\",\"$Smtp_Password\",\"$Smtp_Host\",\"$Smtp_Port\");"
		
	if [ $? -eq 0 ]; then
		rm /etc/MySB/infos/smtp.info
		rm /etc/MySB/infos/smtp_user.info
		rm /etc/MySB/infos/smtp_host.info
		rm /etc/MySB/infos/smtp_port.info
		rm /etc/MySB/infos/smtp_security.info
	fi
fi
# ----- SMTP info

# ----- Ports listing
Error=0
while read line; do
	sqlite3 -echo $SQLiteDB "INSERT into ports (value) VALUES (\"$line\");"
	if [ $? -gt 0 ]; then
		Error=$?
	fi
done < /etc/MySB/infos/ports.txt
if [ $Error -eq 0 ]; then
	rm /etc/MySB/infos/ports.txt
fi
# ----- Ports listing

# ----- Trackers listing
Error=0
while read line; do
	if [ "`echo $line | grep 'www'`" == "" ] && [ "`echo $line | grep 'tracker'`" == "" ]; then
		sqlite3 -echo $SQLiteDB "INSERT into trackers_domains (tracker_domain) VALUES (\"$line\");"
		if [ $? -gt 0 ]; then
			Error=1
		fi		
	fi
done < /etc/MySB/infos/trackers.list
if [ $Error -eq 1 ]; then
	rm /etc/MySB/infos/trackers.txt
fi
# ----- Trackers listing
	
# -----------------------------------------
source /etc/MySB/inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################