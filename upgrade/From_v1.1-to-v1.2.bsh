#!/bin/bash 
# -----------------------------------------
source /etc/MySB/inc/includes_before.bsh
# -----------------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___        
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_       
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_      
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__     
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_    
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_   
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_  
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__ 
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

echo
echo -e "${CRED}If you lose connection during installation, restart the SSH session and run the following command:$CEND"
echo -e "${CGREEN}	screen -r MySB_UpgradeMe$CEND"
echo

#### Vars
ListingUsers

#### Sudoers
sed -i '/MakeRenting.sh/d' /etc/sudoers.d/MySB_nginx
sed -i '/FirewallAndSecurity.sh/d' /etc/sudoers.d/MySB_nginx
echo "www-data ALL = (root) NOPASSWD: /bin/bash /etc/MySB/scripts/FirewallAndSecurity.bsh*" >> /etc/sudoers.d/MySB_nginx

#### CreateDir
echo -e -n "${CBLUE}Create missing directories$CEND..."
screen -dmS CreateDir /bin/bash /etc/MySB/install/CreateDir.bsh;
WaitingScreen CreateDir
StatusSTD

#### Move some files & directories
if [ ! -d /etc/MySB/scripts/blocklist ]; then
	mv /etc/MySB/scripts/blocklist /etc/MySB/files/blocklist
fi

#### Crontab
log_daemon_msg "Creating Blocklist.sh cron"
crontab -l > /tmp/crontab.tmp
sed -i '/BlockList.sh/d' /tmp/crontab.tmp
echo "0 23 * * * /bin/bash /etc/MySB/scripts/BlocklistsRTorrent.bsh NoBanner" >> /tmp/crontab.tmp
for seedUser in $UsersList; do
	sed -i '/'$seedUser'/d' /tmp/crontab.tmp
	echo "5 * * * * if ! ( /bin/ps U $seedUser | grep rtorrent &> /dev/null ); then /etc/init.d/rtorrent-$seedUser restart &> /dev/null; fi" >> /tmp/crontab.tmp
	echo "0 12 1 * * /bin/bash /etc/MySB/scripts/PaymentReminder.bsh $seedUser &> /dev/null" >> /tmp/crontab.tmp
done
crontab /tmp/crontab.tmp
rm /tmp/crontab.tmp
log_end_msg 0

#### Packages
echo -e -n "${CBLUE}Install missing packages$CEND..."
screen -dmS Packages /bin/bash /etc/MySB/install/Packages.bsh;
WaitingScreen Packages
StatusSTD

#### PHP
echo -e -n "${CBLUE}Some fixes for PHP$CEND..."
screen -dmS PHP /bin/bash /etc/MySB/install/PHP.bsh;
WaitingScreen PHP
StatusSTD

#### NginX
echo -e -n "${CBLUE}Some fixes for NginX$CEND..."
# /etc/nginx/locations/MySB.conf
cp /etc/MySB/templates/etc.nginx.locations.mysb.conf.template /etc/nginx/locations/MySB.conf
perl -pi -e "s/<server_ip>/$SrvIpAddress/g" /etc/nginx/locations/MySB.conf
perl -pi -e "s/<mainuser>/$NEWUSER/g" /etc/nginx/locations/MySB.conf

#### Wolf CMS
cp /etc/MySB/templates/etc.myb.web.config.php.template /etc/MySB/web/config.php
AdminDir=`mkpasswd $HostNameFQDN` && AdminDir=$AdminDir`mkpasswd $HostNameFQDN`
AdminDir=`echo $AdminDir | sed "s/\///g"`
perl -pi -e "s/<admin_dir>/$AdminDir/g" /etc/MySB/web/config.php

# /etc/nginx/nginx.conf
cp /etc/MySB/templates/etc.nginx.nginx.conf.template /etc/nginx/nginx.conf
perl -pi -e "s/worker_processes auto;/worker_processes $PROCESSOR;/g" /etc/nginx/nginx.conf

# pagespeed
cp /etc/MySB/templates/etc.nginx.conf.d.pagespeed.template /etc/nginx/conf.d/pagespeed
echo "# Nginx PageSpeed" >> /etc/fstab
echo "tmpfs   /usr/share/nginx/pagespeed      tmpfs   rw,mode=1777,size=512M 0 0" >> /etc/fstab
if [ ! -d /usr/share/nginx/pagespeed ]; then
	mkdir /usr/share/nginx/pagespeed
fi
if [ "`df -H | grep '/usr/share/nginx/pagespeed'`" == "" ]; then
	mount /usr/share/nginx/pagespeed
fi

# conf.d
(
cat <<'EOF'
location ~ \.php$ {
	fastcgi_pass unix:/var/run/php5-fpm.sock;
	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	include /etc/nginx/fastcgi_params;
	fastcgi_param APPLICATION_ENV production;
	#fastcgi_param PHP_VALUE "";
	#fastcgi_param PHP_ADMIN_VALUE "open_basedir=$document_root:/tmp:/tmp\ndisplay_errors=On";
}

EOF
) > /etc/nginx/conf.d/php
(
cat <<'EOF'
location ~ \.php$ {
	fastcgi_pass unix:/var/run/php5-fpm.sock;
	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	include /etc/nginx/fastcgi_params;
	fastcgi_param APPLICATION_ENV production;
	#fastcgi_param PHP_VALUE "";
	#fastcgi_param PHP_ADMIN_VALUE "open_basedir=$document_root:/tmp:/tmp\ndisplay_errors=On";
	fastcgi_param HTTPS on;
}

EOF
) > /etc/nginx/conf.d/php-ssl
(
cat <<'EOF'
location ~ \.php$ {
	fastcgi_pass unix:/var/run/php5-fpm.sock;
	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	include /etc/nginx/fastcgi_params;
	fastcgi_param APPLICATION_ENV production;
	#fastcgi_param PHP_VALUE "";
	fastcgi_param PHP_ADMIN_VALUE "open_basedir=$document_root:/tmp:/etc/MySB/db\ndisplay_errors=Off";
	fastcgi_param HTTPS on;
}

EOF
) > /etc/nginx/conf.d/php-MySB-locations
(
cat <<'EOF'
location ~ \.php$ {
	fastcgi_pass unix:/var/run/php5-fpm.sock;
	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	include /etc/nginx/fastcgi_params;
	fastcgi_param APPLICATION_ENV production;
	#fastcgi_param PHP_VALUE "";
	#fastcgi_param PHP_ADMIN_VALUE "open_basedir=$document_root:/tmp:/tmp\ndisplay_errors=On";
	fastcgi_param HTTPS on;
}

EOF
) > /etc/nginx/conf.d/php-rutorrent-locations
(
cat <<'EOF'
	# deny access to .htaccess file, hidden files, svn files and git files
	location ~ /\.ht 	{ access_log off; log_not_found off; deny all; }	
	location ~ /\.svn 	{ access_log off; log_not_found off; deny all; }
	location ~ /\.git	{ access_log off; log_not_found off; deny all; }
	location ~ /\. 		{ access_log off; log_not_found off; deny all; }	
	#location ^~ / 		{ access_log off; log_not_found off; deny all; }
	location ~ ~$		{ access_log off; log_not_found off; deny all; }
EOF
) > /etc/nginx/conf.d/global_deny_access
(
cat <<'EOF'
	# This block will catch static file requests, such as images, css, js
	# The ?: prefix is a 'non-capturing' mark, meaning we do not require
	# the pattern to be captured into $1 which should help improve performance
	location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
		# Some basic cache-control for static files to be sent to the browser
		expires max;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		access_log off;
		log_not_found off;
	}
EOF
) > /etc/nginx/conf.d/static_files

# move files
if [ -f /usr/share/nginx/html/50x.html ]; then
	rm /usr/share/nginx/html/50x.html
fi
if [ -d /usr/share/nginx/html/seedbox-manager ]; then
	mv /usr/share/nginx/html/seedbox-manager /etc/MySB/web/
fi
if [ -d /usr/share/nginx/html/rutorrent ]; then
	mv /usr/share/nginx/html/rutorrent /etc/MySB/web/
fi
if [ -d /usr/share/nginx/html/Cakebox-light ]; then
	mv /usr/share/nginx/html/Cakebox-light /etc/MySB/web/
fi
StatusSTD

#### SQLite
echo -e -n "${CBLUE}Create SQLite database$CEND..."
screen -dmS SQLite /bin/bash /etc/MySB/install/SQLite.bsh;
WaitingScreen SQLite
StatusSTD

#### LogWatch
if [ -f /etc/logwatch/conf/logwatch.conf ]; then
	echo -e -n "${CBLUE}Some fixes for LogWatch$CEND..."
	perl -pi -e "s/^Range = All/Range = yesterday/g" /etc/logwatch/conf/logwatch.conf
	perl -pi -e "s/^Detail = High/Detail = Low/g" /etc/logwatch/conf/logwatch.conf
	StatusSTD
fi

#### Certificates
echo -e -n "${CBLUE}Some fixes for Certificates$CEND..."
chmod 644 /etc/MySB/ssl/*.cert
StatusSTD

#### rTorrent (.rtorrent.rc)
for seedUser in $UsersList; do
	log_daemon_msg "Creating '.rtorrent.rc' file for $seedUser"
	HOMEDIR_ESCAPED=`echo /home/$seedUser | sed s,/,\\\\\\\\\\/,g`
	SCGIPORT="`sqlite3 $MySB_DB \"SELECT scgi_port FROM users WHERE users_ident = '$seedUser'\"`"
	NETWORKPORT="`sqlite3 $MySB_DB \"SELECT rtorrent_port FROM users WHERE users_ident = '$seedUser'\"`"	
	
	cp /home/$seedUser/.rtorrent.rc /home/$seedUser/.rtorrent.rc.bckp_v1.1_to_v1.2
	cp /etc/MySB/templates/rtorrent.rc.template /home/$seedUser/.rtorrent.rc
	perl -pi -e "s/<server_ip>/$SrvIpAddress/g" /home/$seedUser/.rtorrent.rc
	perl -pi -e "s/<username>/$seedUser/g" /home/$seedUser/.rtorrent.rc
	perl -pi -e "s/<homedir>/$HOMEDIR_ESCAPED/g" /home/$seedUser/.rtorrent.rc
	perl -pi -e "s/<scgi_port>/$SCGIPORT/g" /home/$seedUser/.rtorrent.rc
	perl -pi -e "s/<port_range>/$NETWORKPORT-$NETWORKPORT/g" /home/$seedUser/.rtorrent.rc
	
	if [ "$MySB_PeerBlock" == "rTorrent" ]; then
		perl -pi -e "s/#{1}ipv4_filter.load/ipv4_filter.load/g" /home/$seedUser/.rtorrent.rc
		perl -pi -e "s/#{1}print/print/g" /home/$seedUser/.rtorrent.rc
		perl -pi -e "s/#{1}schedule=load_filter/schedule=load_filter/g" /home/$seedUser/.rtorrent.rc
	fi

	case "$FILESYSTEMTYPE" in
		"ext4"|"xfs"|"btrfs")
			perl -pi -e "s/system.file_allocate.set = no/system.file_allocate.set = yes/g" /home/$seedUser/.rtorrent.rc
		;;	
		*)
			perl -pi -e "s/^system.file_allocate.set = yes/system.file_allocate.set = no/g" /home/$seedUser/.rtorrent.rc
		;;			
	esac
	
	StatusLSB
done

#### Firewall And Security
#ScriptInvoke 'screen' '/etc/MySB/scripts/FirewallAndSecurity.bsh' 'new'

#### Refresh tools
#ScriptInvoke 'bash' '/etc/MySB/bin/MySB_RefreshMe' 'all'

#### Upgrade System
#ScriptInvoke 'bash' '/etc/MySB/bin/MySB_UpgradeSystem'

clear
echo -e "${CGREEN}Upgrade finished succesfully !$CEND"
echo

# -----------------------------------------
source /etc/MySB/inc/includes_after.bsh
# -----------------------------------------
##################### LAST LINE ######################################